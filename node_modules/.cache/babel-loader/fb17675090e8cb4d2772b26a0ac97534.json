{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\n//import\nimport React from \"react\";\nimport { database, storageRoot } from '../helpers/firebase.js'; // Logic\n// Class\n\nvar Admin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  // Starting class\n  function Admin() {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"addFolder\", function () {\n      //setup image\n      var file = _this.folderImage.files[0];\n      var name = file.name + '-' + +new Date();\n      var task = storageRoot.child(name).put(file); //when loaded\n\n      task.then(function (snapshot) {\n        snapshot.ref.getDownloadURL().then(function (url) {\n          //add to firebase\n          database.ref('folders').push({\n            folderTitle: _this.state.folderTitle,\n            folderImage: url\n          }); //reset state and inputs\n\n          _this.setState({\n            folderTitle: ''\n          });\n\n          _this.folderImage.value = '';\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addPost\", function () {\n      //setup image\n      var file = _this.postImage.files[0];\n      var name = file.name + '-' + +new Date();\n      var task = storageRoot.child(name).put(file); //when loaded\n\n      task.then(function (snapshot) {\n        snapshot.ref.getDownloadURL().then(function (url) {\n          //add to firebase\n          database.ref('posts').push({\n            postTitle: _this.state.postTitle,\n            postImage: url,\n            folderID: _this.state.postFolderID\n          }); //reset state and inputs\n\n          _this.setState({\n            postTitle: '',\n            postFolderID: ''\n          });\n\n          _this.postImage.value = '';\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addUser\", function () {\n      //setup image\n      var file = _this.userImage.files[0];\n      var name = file.name + '-' + +new Date();\n      var task = storageRoot.child(name).put(file); //when loaded\n\n      task.then(function (snapshot) {\n        snapshot.ref.getDownloadURL().then(function (url) {\n          //get time\n          var now = new Date().getTime(); //add to firebase\n\n          database.ref('users').push({\n            userName: _this.state.userName,\n            userImage: url,\n            userAdded: now\n          }); //reset state and inputs\n\n          _this.setState({\n            userName: ''\n          });\n\n          _this.userImage.value = '';\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeFolderTitle\", function (e) {\n      _this.setState({\n        folderTitle: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changePostTitle\", function (e) {\n      _this.setState({\n        postTitle: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changePostFolderID\", function (e) {\n      _this.setState({\n        postFolderID: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeUserName\", function (e) {\n      _this.setState({\n        userName: e.target.value\n      });\n    });\n\n    _this.state = {\n      folderTitle: '',\n      folderImage: '',\n      postTitle: '',\n      postImage: '',\n      postFolderID: '',\n      uploadedImage: '',\n      userName: '',\n      folders: []\n    };\n    database.ref('folders').once('value').then(function (snapshot) {\n      _this.setState({\n        folders: snapshot.val()\n      });\n    });\n    return _this;\n  } // Lifecycles\n\n\n  _createClass(Admin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {} // Functions\n\n  }, {\n    key: \"render\",\n    //Render\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"jsx-3189763689\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3189763689\"\n      }, React.createElement(\"h2\", {\n        className: \"jsx-3189763689\"\n      }, \"Create New Folder\"), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"label\", {\n        className: \"jsx-3189763689\"\n      }, \"Title:*\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.changeFolderTitle.bind(this),\n        value: this.state.folderTitle,\n        className: \"jsx-3189763689\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"label\", {\n        className: \"jsx-3189763689\"\n      }, \"Image:*\"), React.createElement(\"input\", {\n        type: \"file\",\n        label: \"Upload\",\n        ref: function ref(_ref) {\n          return _this2.folderImage = _ref;\n        },\n        className: \"jsx-3189763689\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"button\", {\n        onClick: this.addFolder,\n        className: \"jsx-3189763689\"\n      }, \"Add Folder\"))), React.createElement(\"div\", {\n        className: \"jsx-3189763689\"\n      }, React.createElement(\"h2\", {\n        className: \"jsx-3189763689\"\n      }, \"Create Post\"), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"label\", {\n        className: \"jsx-3189763689\"\n      }, \"Title:*\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.changePostTitle.bind(this),\n        value: this.state.postTitle,\n        className: \"jsx-3189763689\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"label\", {\n        className: \"jsx-3189763689\"\n      }, \"Title:*\"), React.createElement(\"select\", {\n        onChange: this.changePostFolderID.bind(this),\n        value: this.state.postFolderID,\n        className: \"jsx-3189763689\"\n      }, React.createElement(\"option\", {\n        value: \"\",\n        className: \"jsx-3189763689\"\n      }, \"Select Section\"), _Object$keys(this.state.folders).map(function (key) {\n        return React.createElement(\"option\", {\n          key: key,\n          value: key,\n          className: \"jsx-3189763689\"\n        }, _this2.state.folders[key].folderTitle);\n      }))), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"label\", {\n        className: \"jsx-3189763689\"\n      }, \"Image:*\"), React.createElement(\"input\", {\n        type: \"file\",\n        label: \"Upload\",\n        ref: function ref(_ref2) {\n          return _this2.postImage = _ref2;\n        },\n        className: \"jsx-3189763689\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"button\", {\n        onClick: this.addPost,\n        className: \"jsx-3189763689\"\n      }, \"Add Post\"))), React.createElement(\"div\", {\n        className: \"jsx-3189763689\"\n      }, React.createElement(\"h2\", {\n        className: \"jsx-3189763689\"\n      }, \"Create User\"), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"label\", {\n        className: \"jsx-3189763689\"\n      }, \"Name:*\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.changeUserName.bind(this),\n        value: this.state.userName,\n        className: \"jsx-3189763689\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"label\", {\n        className: \"jsx-3189763689\"\n      }, \"Image:*\"), React.createElement(\"input\", {\n        type: \"file\",\n        label: \"Upload\",\n        ref: function ref(_ref3) {\n          return _this2.userImage = _ref3;\n        },\n        className: \"jsx-3189763689\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-3189763689\" + \" \" + 'row'\n      }, React.createElement(\"button\", {\n        onClick: this.addUser,\n        className: \"jsx-3189763689\"\n      }, \"Add User\"))), React.createElement(_JSXStyle, {\n        id: \"3189763689\"\n      }, [\".row.jsx-3189763689{padding:10px 0px;}\", \"label.jsx-3189763689{display:block;}\", \"input.jsx-3189763689{padding:15px 5px;width:300px;font-size:16px;}\", \"select.jsx-3189763689{padding:15px 5px;width:300px;height:50px;font-size:16px;}\", \"button.jsx-3189763689{padding:10px;}\"]));\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":null,"metadata":{},"sourceType":"module"}